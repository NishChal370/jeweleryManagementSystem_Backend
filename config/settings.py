"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.0.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from distutils.command.config import config
import os
from pathlib import Path
from posixpath import join

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
with open('key.txt', 'r') as key_file:
    key = key_file.readline()
    
SECRET_KEY = key

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'main.apps.MainConfig',
    'corsheaders',
    'rest_framework',

]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS':  [], #[BASE_DIR.joinpath('frontend')],  # new
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# # STATICFILES_DIRS = (
# #     BASE_DIR.joinpath('frontend', 'build', 'static'),  # new
# # )

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# MEDIA_URL = 'images/'

STATICFILES_DIR = [
    os.path.join(BASE_DIR, 'static')
]

MEDIA_ROOT = os.path.join(BASE_DIR, 'static/images')

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



CORS_ALLOWED_ORIGINS = [

    'http://127.0.0.1:3000',
    "http://localhost:3000",

]




# # # # CORS_ALLOW_CREDENTIALS = True


# # # # # change to https://app.example.com in production settings
# # # CORS_ORIGIN_WHITELIST = ['http://localhost:3000']




# # # CORS_EXPOSE_HEADERS = ['Content-Type', 'Cookie']

# # # CSRF_TRUSTED_ORIGINS = ['http://localhost:3000',]
# # # CORS_EXPOSE_HEADERS = ['Content-Type', 'X-CSRFToken']
# # # CORS_ALLOW_CREDENTIALS = True

# # # CSRF_COOKIE_SAMESITE = 'Lax' #Lax allows us to send CSRF cookies in external requests.
# # # SESSION_COOKIE_SAMESITE = 'Lax'
# # # CSRF_COOKIE_HTTPONLY = False  # False since we will grab it via universal-cookies
# # # SESSION_COOKIE_HTTPONLY = False


# REST_FRAMEWORK={
#     'DEFAULT_AUTHENTICATION_CLASSES':[
#         'rest_framework.authentication.SessionAuthentication'
#     ],
#     'DEFAULT_PERMISSION_CLASSES':[
#         'rest_framework.permissions.IsAuthenticated'
#     ]
# }

#STATIC_URL = '/static/' #IsAdminUser'
#MEDIA_ROOT = BASE_DIR/'uploads'
#MEDIA_URL = '/images/'


CSRF_COOKIE_SAMESITE = 'Lax'
SESSION_COOKIE_SAMESITE = 'Lax'
CSRF_COOKIE_HTTPONLY = False
SESSION_COOKIE_HTTPONLY = False

# PROD ONLY
# CSRF_COOKIE_SECURE = True
# SESSION_COOKIE_SECURE = True

CORS_EXPOSE_HEADERS = ['Content-Type', 'X-CSRFToken']

CORS_ORINGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True



# CSRF_HEADER_NAME = 'HTTP_X_CSRFTOKEN'

# CSRF_COOKIE_NAME = 'X-CSRFTOKEN'

# CORS_ALLOW_HEADERS = [
#     'X-CSRFTOKEN',
#     'csrftoken',
#     'X-XSRF-TOKEN',
#     'content-type',
#     'x-requested-with',
#     'Authorization',
#     'Set-Cookie'
# ]


# # CSRF_TRUSTED_ORIGINS = ['http://localhost:3000']

# # CSRF_COOKIE_DOMAIN = 'http://192.168.56.1:3000' 

# # CSRF_COOKIE_PATH = 'http://localhost:3000'

# # SESSION_COOKIE_DOMAIN = 'http://localhost:3000'




# CSRF_HEADER_NAME = 'HTTP_X_CSRFTOKEN'

# CSRF_COOKIE_NAME = 'X-CSRFTOKEN'

# CORS_ALLOW_HEADERS = [
#     'X-CSRFTOKEN',
#     'csrftoken',
#     'X-XSRF-TOKEN',
#     'content-type',
#     'x-requested-with',
#     'Authorization',
#     'Set-Cookie'
# ]

# CORS_ALLOW_CREDENTIALS = True

# CSRF_TRUSTED_ORIGINS = ['http://localhost:3000']

# CSRF_COOKIE_DOMAIN = 'http://192.168.56.1:3000' 

# CSRF_COOKIE_PATH = 'http://localhost:3000'

# SESSION_COOKIE_DOMAIN = 'http://localhost:3000'






# CSRF_COOKIE_SAMESITE = 'Strict'
# SESSION_COOKIE_SAMESITE = 'Strict'
# CSRF_COOKIE_HTTPONLY = False  # False since we will grab it via universal-cookies
# SESSION_COOKIE_HTTPONLY = False
import json

with open('mail.json','r') as input_file:
    email_data = json.load(input_file)
    email = email_data['EMAIL']
    password = email_data['PASSWORD']
    port = email_data['PORT']
    

# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# DEFAULT_FROM_EMAIL = email
# EMAIL_HOST_USER = email
# EMAIL_HOST_PASSWORD = password
# EMAIL_USE_TLS = True
# EMAIL_PORT = port


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
DEFAULT_FROM_EMAIL = email
EMAIL_HOST_USER = email
EMAIL_HOST_PASSWORD = password
EMAIL_USE_TLS = True
EMAIL_PORT = port